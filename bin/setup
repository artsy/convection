#!/bin/bash

# Exit if any subcommand fails
set -e

echo "brew bundle install...(run script again if it fails at rabbitmq)"
brew bundle --file=- <<EOF
brew 'postgresql@14', restart_service: true
brew 'rabbitmq', restart_service: true
brew 'redis', restart_service: true
EOF

if command -v asdf >/dev/null; then
  echo "Installing language dependencies with asdf"
  asdf install
else
  echo "Skipping language dependencies installation (asdf not found)"
fi

echo "install the bundler version locked in Gemfile.lock, if any..."
LOCKED_BUNDLER_VERSION=$(grep -A2 'BUNDLED WITH' Gemfile.lock | tail -1 | awk '{print $1}')
if [[ "$LOCKED_BUNDLER_VERSION" != '' ]]; then
  gem install bundler:"$LOCKED_BUNDLER_VERSION"
fi

echo "install lastest bundler version, if at this point bundler is still missing..."
if ! command -v bundler > /dev/null; then
  gem install bundler
fi

echo "foreman install, if required..."
if ! command -v foreman > /dev/null; then
  gem install foreman
fi

echo "install project's gem dependencies..."
bundle install > /dev/null

if command -v yarn >/dev/null; then
  echo "Yarn is already installed"
else
  echo "Installing yarn..."
  npm install -g yarn
fi

echo "download .env.shared (common local dev config) from S3..."
aws s3 cp s3://artsy-citadel/convection/.env.shared ./

echo "initialize .env (custom local dev config) from .env.example, if required..."
if [ ! -e ".env" ]; then
  cp .env.example .env
fi

echo "db setup..."
foreman run bundle exec rake db:setup

echo "
Done!

Your local dev environment is setup based on:

- sane defaults in config/initializers/_config.rb
- common local dev config in .env.shared
- custom local dev config in .env

Please launch staging VPN because the configs point to artsy apps in staging environment.
"
